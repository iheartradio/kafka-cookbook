#!/bin/bash
#
# Init file for <%= @daemon_name.capitalize %>
#
# chkconfig: 345 20 80
# description: <%= @daemon_name %> daemon
#
# processname: <%= @daemon_name %>
# pidfile: /var/run/<%= @daemon_name %>.pid

# Source function library
. /etc/rc.d/init.d/functions

# Source networking configuration
. /etc/sysconfig/network

# Check that networking is up
[ "$NETWORKING" = "no" ] && exit 0

DAEMON=<%= @daemon_name %>
PIDFILE=/var/run/$DAEMON.pid
RETVAL=0

start() {
  if [ -f $PIDFILE ] && checkpid $(head -1 $PIDFILE); then
    echo "$DAEMON (pid  $(head -1 $PIDFILE)) is already running..."
    exit 0
  fi

  MAIN_CLASS="<%= @main_class %>"
  JAVA_HOME=<%= node[:java][:java_home] %>
  DAEMON_PATH=<%= node[:kafka][:install_dir] %>
  SERVER_CONFIG=$DAEMON_PATH/config/<%= @config %>

  CLASSPATH=$DAEMON_PATH/kafka_<%= node[:kafka][:scala_version] %>-<%= node[:kafka][:version] %>.jar

  for jar in $(ls $DAEMON_PATH/libs/*.jar); do
    CLASSPATH=$CLASSPATH:$jar
  done

  if [ -z "$JMX_OPTS"]; then
    JMX_OPTS="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false "
  fi

  if [ -z "$JMX_PORT" ]; then
    JMX_PORT="<%= @jmx_port %>"
  fi

  JMX_OPTS="$JMX_OPTS -Dcom.sun.management.jmxremote.port=$JMX_PORT"

  if [ -z "$KAFKA_OPTS" ]; then
    KAFKA_OPTS="-Xmx512M -server -Djava.net.preferIPv4Stack=true -Dlog4j.configuration=file:$DAEMON_PATH/config/<%= @log4j_config %>"
  fi

  if [ -z "$JAVA_HOME" ]; then
    JAVA="java"
  else
    JAVA="$JAVA_HOME/bin/java"
  fi

  CMD="$JAVA $KAFKA_OPTS $JMX_OPTS -cp $CLASSPATH"

  echo -n $"Starting $DAEMON"
  nohup $CMD $MAIN_CLASS $SERVER_CONFIG > /dev/null 2>&1 &
  RETVAL=$?
  PID=$!
  sleep 2
  [ $RETVAL -eq 0 ] && echo_success || echo_failure
  echo
  echo $PID > $PIDFILE
}

case "$1" in
  start)
    start
    ;;
  stop)
    action "Stopping $DAEMON" killproc -p $PIDFILE -d 5
    ;;
  restart)
    stop
    start
    ;;
  status)
    status -p $PIDFILE $DAEMON
    ;;
  *)
    echo "Usage: $DAEMON {start|stop|restart|status}" >&2
    RETVAL=1
    ;;
esac

exit $RETVAL
